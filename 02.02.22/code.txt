#include <iostream>
using namespace std;

int main()
{
	//Создание двумерного динамического массива
	int** array = new int* [4];
	for (int i = 0; i < 4; i++)
	{
		array[i] = new int[5];
	}

	srand(time(NULL));
	for (int i = 0; i < 4; i++)
	{
		for (int j = 0; j < 5; j++)
		{
			array[i][j] = rand() % 20;
			cout << array[i][j] << "\t";
		}
		cout << endl;
	}

	//Удаление
	for (int i = 0; i < 4; i++)
	{
		delete[] array[i];
	}
	delete[] array;

	return 0;
}

======================================================
#include <iostream>
using namespace std;

void input_print(int** array, const int Rows, const int Colums)
{
	for (int i = 0; i < Rows; i++)
	{
		for (int j = 0; j < Colums; j++)
		{
			array[i][j] = rand() % 20;
			cout << array[i][j] << "\t";
		}
		cout << endl;
	}
}

int main()
{
	//Создание двумерного динамического массива
	int** array = new int* [4];
	for (int i = 0; i < 4; i++)
	{
		array[i] = new int[5];
	}

	srand(time(NULL));
	input_print(array, 4, 5);
	//Удаление
	for (int i = 0; i < 4; i++)
	{
		delete[] array[i];
	}
	delete[] array;

	cout << endl << endl;

	array = new int* [3];
	for (int i = 0; i < 3; i++)
	{
		array[i] = new int[3];
	}

	input_print(array, 3, 3);

	//Удаление
	for (int i = 0; i < 3; i++)
	{
		delete[] array[i];
	}
	delete[] array;

	return 0;
}

========================================
#include <iostream>
using namespace std;

void input(int** array, const int Rows, const int Colums)
{
	for (int i = 0; i < Rows; i++)
	{
		for (int j = 0; j < Colums; j++)
		{
			array[i][j] = rand() % 5;
		}
	}
}

void output(int** array, const int Rows, const int Colums)
{
	for (int i = 0; i < Rows; i++)
	{
		for (int j = 0; j < Colums; j++)
		{
			cout << array[i][j] << "  ";
		}
		cout << endl;
	}
}

void task1(int** array, const int Rows, const int Colums)
{
	for (int i = 0; i < Rows; i++)
	{
		bool x = true;
		for (int j = 0; j < Colums; j++)
		{
			if (array[i][j] == 0)
			{
				x = false;
				break;
			}
		}

		if (x)
		{
			for (int j = 0; j < Colums; j++)
			{
				cout << array[i][j] << "  ";
			}
			cout << endl;
		}
	}
}

void task2(int** array, const int Rows, const int Colums)
{
	int count = 0;
	for (int i = 0; i < Rows-1; i++)
	{
		for (int j = 0; j < Colums; j++)
		{
			if (array[i][j] == 0)
			{
				swap(array[i], array[i + 1]);
				i = -1;
				//Rows--;
				break;
			}
		}
	}

	output(array, Rows, Colums);
}

void task3(int** array, const int Rows, const int Columns)
{
	int rows2 = 0;
	for (int i = 0; i < Rows; i++)
	{
		int count = 0;
		for (int j = 0; j < Columns; j++)
		{
			if (array[i][j] == 0)
			{
				break;
			}
			else
			{
				count++;
			}
		}
		if (count == Columns)
			rows2++;
	}

	//Создание нового двумерного дин. массива
	int** array2 = new int*[rows2];
	for (int i = 0; i < rows2; i++)
	{
		array2[i] = new int[Columns];
	}

	int k = 0;
	for (int i = 0; i < Rows; i++)
	{
		int count = 0;
		for (int j = 0; j < Columns; j++)
		{
			if (array[i][j] == 0)
			{
				break;
			}
			else
			{
				count++;
			}
		}
		if (count == Columns)
		{
			for (int j = 0; j < Columns; j++)
			{
				array2[k][j] = array[i][j];
			}
			k++;
		}
	}

	output(array2, rows2, Columns);
	//Удаление
	for (int i = 0; i < rows2; i++)
	{
		delete[] array2[i];
	}
	delete[] array2;
}

int main()
{
	srand(time(NULL));
	//Создание двумерного дин. массива
	const int Rows = 4;
	const int Columns = 5;
	int** array = new int*[Rows];
	for (int i = 0; i < Rows; i++)
	{
		array[i] = new int[Columns];
	}

	//Ввод данных
	input(array, Rows, Columns);
	//Вывод данных
	output(array, Rows, Columns);
	cout << endl << endl;

	//Вывод нового массива без 0
	//task1(array, Rows, Columns);
	task3(array, Rows, Columns);

	//Удаление двумерного дин. массива
	for (int i = 0; i < Rows; i++)
	{
		delete[] array[i];
	}
	delete[] array;
	return 0;
}